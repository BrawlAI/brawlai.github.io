(this.webpackJsonppages=this.webpackJsonppages||[]).push([[220],{358:function(e,t,n){"use strict";n.r(t);var i=n(0),r=n(14),s=n(58),a=n(1),c=Object(i.lazy)((function(){return Promise.all([n.e(0),n.e(1)]).then(n.bind(null,102))}));t.default=function(e){var t=e.link,n=e.linkName;return Object(a.jsxs)("div",{className:"info-page",children:[Object(a.jsxs)(r.b,{className:"guide-back-button",to:t,children:[Object(a.jsx)(s.a,{icon:"arrow-left"})," ",n]}),Object(a.jsx)("h2",{children:"Units and the point budget"}),Object(a.jsxs)("p",{children:["Each bot consists of source-code and a squad of units. Each unit in the squad can be named and customised in terms of ",Object(a.jsx)(r.b,{className:"inline",to:"/guide/weapons",children:"weapon"}),", ",Object(a.jsx)(r.b,{className:"inline",to:"/guide/items",children:"items"}),", ",Object(a.jsx)(r.b,{className:"inline",to:"/guide/armour",children:"armour"})," and the amount of magazines. A unit has a ",Object(a.jsx)(r.b,{className:"inline",to:"/guide/armour",children:"base cost"})," and then everything it carries has a cost added to it. There is a total of 10,000 points available to be spent. Any units or items that exceed the budget will not be added to the squad at the start of a match."]}),Object(a.jsx)("p",{children:"Currently there is only one unit type: Rookie. There will likely be more unit types in the future seasons."}),Object(a.jsx)("p",{children:"Units are provided as part of (very likely) the first message (the setup message)."}),Object(a.jsx)(i.Suspense,{fallback:Object(a.jsx)("div",{children:"Loading..."}),children:Object(a.jsx)(c,{code:"import json\nmessage = json.loads(input())\n#print('map:', message['heightMap'])\nprint('units:', message['units']) # Units\nprint('cost:', message['cost']) # Total cost of the squad\n# prints the units and then the total cost of the whole squad"})}),Object(a.jsx)("p",{children:"Each unit will have the following attributes, which can be accessed by unit['attribute'] where 'attribute' is in the following table:"}),Object(a.jsx)("table",{children:Object(a.jsxs)("tbody",{children:[Object(a.jsxs)("tr",{children:[Object(a.jsx)("th",{children:"Attribute"}),Object(a.jsx)("th",{children:"Data type"}),Object(a.jsx)("th",{children:"Description"})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("td",{children:"name"}),Object(a.jsx)("td",{children:"string"}),Object(a.jsx)("td",{children:"The name of the unit. Use this name to perform actions with this unit."})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("td",{children:Object(a.jsx)(r.b,{className:"inline",to:"/guide/armour",children:"type"})}),Object(a.jsx)("td",{children:"string"}),Object(a.jsx)("td",{children:"The type of the unit. The type defines the base values."})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("td",{children:Object(a.jsx)(r.b,{className:"inline",to:"/guide/armour",children:"armor"})}),Object(a.jsx)("td",{children:"string"}),Object(a.jsx)("td",{children:"The name of the armour the unit is wearing."})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("td",{children:Object(a.jsx)(r.b,{className:"inline",to:"/guide/actions",children:"movement"})}),Object(a.jsx)("td",{children:"integer"}),Object(a.jsx)("td",{children:"The maximum distance the unit can travel when using both actions."})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("td",{children:Object(a.jsx)(r.b,{className:"inline",to:"/guide/visibility",children:"vision"})}),Object(a.jsx)("td",{children:"integer"}),Object(a.jsx)("td",{children:"The maximum distance the unit can spot enemies and see changes in the brawl."})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("td",{children:Object(a.jsx)(r.b,{className:"inline",to:"/guide/weapons",children:"aim"})}),Object(a.jsx)("td",{children:"integer"}),Object(a.jsx)("td",{children:"The aim of the unit, which is added to the hit chance of a weapon."})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("td",{children:"health"}),Object(a.jsx)("td",{children:"integer"}),Object(a.jsxs)("td",{children:["The current health of the unit. This can be restored or boosted using a ",Object(a.jsx)(r.b,{className:"inline",to:"/guide/items",children:"medikit"}),"."]})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("td",{children:"maxHealth"}),Object(a.jsx)("td",{children:"integer"}),Object(a.jsx)("td",{children:"The maximum health the unit can have. Any health above the maximum health is reduced by 1 at the start of the unit's turn."})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("td",{children:"armorBonus"}),Object(a.jsx)("td",{children:"integer"}),Object(a.jsxs)("td",{children:["The amount of damage that is negated before it reduces health. armorBonus is gained from a ",Object(a.jsx)(r.b,{className:"inline",to:"/guide/items",children:"shield"}),", but can be lost if taken damage from a grenade."]})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("td",{children:"maxArmorBonus"}),Object(a.jsx)("td",{children:"integer"}),Object(a.jsx)("td",{children:"The original amount of armorBonus the unit had at the start of the brawl."})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("td",{children:Object(a.jsx)(r.b,{className:"inline",to:"/guide/weapons",children:"weapon"})}),Object(a.jsx)("td",{children:"string"}),Object(a.jsx)("td",{children:"The name of the weapon the unit is carrying."})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("td",{children:Object(a.jsx)(r.b,{className:"inline",to:"/guide/shooting",children:"weaponMags"})}),Object(a.jsx)("td",{children:"integer"}),Object(a.jsx)("td",{children:"The number of magazines the unit is carrying for the weapon. One magazine is used immediately (if available) to reload the weapon at the start of the brawl."})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("td",{children:Object(a.jsx)(r.b,{className:"inline",to:"/guide/shooting",children:"ammo"})}),Object(a.jsx)("td",{children:"integer"}),Object(a.jsxs)("td",{children:["The amount of ammunition currently loaded into the weapon. The weapon can be used as long as it has ammunition. If the ammunition reaches zero, it must be ",Object(a.jsx)(r.b,{className:"inline",to:"/guide/shooting",children:"reloaded"})," to shoot or to start ",Object(a.jsx)(r.b,{className:"inline",to:"/guide/overwatch",children:"overwatching."})]})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("td",{children:Object(a.jsx)(r.b,{className:"inline",to:"/guide/weapons",children:"maxAmmo"})}),Object(a.jsx)("td",{children:"integer"}),Object(a.jsxs)("td",{children:["The maximum amount of ammunition that can be loaded to the carried weapon. When a weapon is ",Object(a.jsx)(r.b,{className:"inline",to:"/guide/shooting",children:"reloaded"})," then the amount of ammunition that is currently loaded becomes this value."]})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("td",{children:Object(a.jsx)(r.b,{className:"inline",to:"/guide/items",children:"items"})}),Object(a.jsx)("td",{children:"List[string]"}),Object(a.jsx)("td",{children:"A list of the item names that the unit is carrying."})]}),Object(a.jsxs)("tr",{children:[Object(a.jsx)("td",{children:Object(a.jsx)(r.b,{className:"inline",to:"/guide/actions",children:"location"})}),Object(a.jsx)("td",{children:"List[integer]"}),Object(a.jsx)("td",{children:"The location in [x,y] coordinates where the unit is currently located."})]})]})}),Object(a.jsxs)("p",{children:["There will be a number of updates to the above values throughout the brawl. These will come in various forms, such as movement ",Object(a.jsx)(r.b,{className:"inline",to:"/guide/notifications",children:"notifications"})," or shooting ",Object(a.jsx)(r.b,{className:"inline",to:"/guide/notifications",children:"notifications"}),"."]})]})}},58:function(e,t,n){"use strict";n.d(t,"a",(function(){return x}));var i=n(16),r=n(15),s=n.n(r),a=n(0),c=n.n(a);function o(e){return(o="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function d(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function h(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?d(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):d(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},s=Object.keys(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}function u(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function j(e){return t=e,(t-=0)===t?e:(e=e.replace(/[\-_\s]+(.)?/g,(function(e,t){return t?t.toUpperCase():""}))).substr(0,1).toLowerCase()+e.substr(1);var t}function f(e){return e.split(";").map((function(e){return e.trim()})).filter((function(e){return e})).reduce((function(e,t){var n,i=t.indexOf(":"),r=j(t.slice(0,i)),s=t.slice(i+1).trim();return r.startsWith("webkit")?e[(n=r,n.charAt(0).toUpperCase()+n.slice(1))]=s:e[r]=s,e}),{})}var m=!1;try{m=!0}catch(y){}function O(e){return i.c.icon?i.c.icon(e):null===e?null:"object"===o(e)&&e.prefix&&e.iconName?e:Array.isArray(e)&&2===e.length?{prefix:e[0],iconName:e[1]}:"string"===typeof e?{prefix:"fas",iconName:e}:void 0}function p(e,t){return Array.isArray(t)&&t.length>0||!Array.isArray(t)&&t?l({},e,t):{}}function x(e){var t=e.forwardedRef,n=b(e,["forwardedRef"]),r=n.icon,s=n.mask,a=n.symbol,c=n.className,o=n.title,d=n.titleId,j=O(r),f=p("classes",[].concat(u(function(e){var t,n=e.spin,i=e.pulse,r=e.fixedWidth,s=e.inverse,a=e.border,c=e.listItem,o=e.flip,d=e.size,h=e.rotation,b=e.pull,u=(l(t={"fa-spin":n,"fa-pulse":i,"fa-fw":r,"fa-inverse":s,"fa-border":a,"fa-li":c,"fa-flip-horizontal":"horizontal"===o||"both"===o,"fa-flip-vertical":"vertical"===o||"both"===o},"fa-".concat(d),"undefined"!==typeof d&&null!==d),l(t,"fa-rotate-".concat(h),"undefined"!==typeof h&&null!==h&&0!==h),l(t,"fa-pull-".concat(b),"undefined"!==typeof b&&null!==b),l(t,"fa-swap-opacity",e.swapOpacity),t);return Object.keys(u).map((function(e){return u[e]?e:null})).filter((function(e){return e}))}(n)),u(c.split(" ")))),y=p("transform","string"===typeof n.transform?i.c.transform(n.transform):n.transform),w=p("mask",O(s)),v=Object(i.a)(j,h({},f,{},y,{},w,{symbol:a,title:o,titleId:d}));if(!v)return function(){var e;!m&&console&&"function"===typeof console.error&&(e=console).error.apply(e,arguments)}("Could not find icon",j),null;var N=v.abstract,T={ref:t};return Object.keys(n).forEach((function(e){x.defaultProps.hasOwnProperty(e)||(T[e]=n[e])})),g(N[0],T)}x.displayName="FontAwesomeIcon",x.propTypes={border:s.a.bool,className:s.a.string,mask:s.a.oneOfType([s.a.object,s.a.array,s.a.string]),fixedWidth:s.a.bool,inverse:s.a.bool,flip:s.a.oneOf(["horizontal","vertical","both"]),icon:s.a.oneOfType([s.a.object,s.a.array,s.a.string]),listItem:s.a.bool,pull:s.a.oneOf(["right","left"]),pulse:s.a.bool,rotation:s.a.oneOf([0,90,180,270]),size:s.a.oneOf(["lg","xs","sm","1x","2x","3x","4x","5x","6x","7x","8x","9x","10x"]),spin:s.a.bool,symbol:s.a.oneOfType([s.a.bool,s.a.string]),title:s.a.string,transform:s.a.oneOfType([s.a.string,s.a.object]),swapOpacity:s.a.bool},x.defaultProps={border:!1,className:"",mask:null,fixedWidth:!1,inverse:!1,flip:null,icon:null,listItem:!1,pull:null,pulse:!1,rotation:null,size:null,spin:!1,symbol:!1,title:"",transform:null,swapOpacity:!1};var g=function e(t,n){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("string"===typeof n)return n;var r=(n.children||[]).map((function(n){return e(t,n)})),s=Object.keys(n.attributes||{}).reduce((function(e,t){var i=n.attributes[t];switch(t){case"class":e.attrs.className=i,delete n.attributes.class;break;case"style":e.attrs.style=f(i);break;default:0===t.indexOf("aria-")||0===t.indexOf("data-")?e.attrs[t.toLowerCase()]=i:e.attrs[j(t)]=i}return e}),{attrs:{}}),a=i.style,c=void 0===a?{}:a,o=b(i,["style"]);return s.attrs.style=h({},s.attrs.style,{},c),t.apply(void 0,[n.tag,h({},s.attrs,{},o)].concat(u(r)))}.bind(null,c.a.createElement)}}]);