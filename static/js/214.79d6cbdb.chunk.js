(this.webpackJsonppages=this.webpackJsonppages||[]).push([[214],{343:function(e,t,n){"use strict";n.r(t);var r=n(0),s=n(14),i=n(58),c=n(1),o=Object(r.lazy)((function(){return Promise.all([n.e(0),n.e(1)]).then(n.bind(null,102))}));t.default=function(e){var t=e.link,n=e.linkName;return Object(c.jsxs)("div",{className:"info-page",children:[Object(c.jsxs)(s.b,{className:"guide-back-button",to:t,children:[Object(c.jsx)(i.a,{icon:"arrow-left"})," ",n]}),Object(c.jsx)("h2",{children:"Map overview"}),Object(c.jsx)("p",{children:"Each brawl has a unique map. It is randomly generated. Your squad and the enemy always start at the opposite corners of the map. Currently the maps are between 48 by 48 and 64 by 64 squares (tiles) in size. There is currently only a single level/floor."}),Object(c.jsx)("p",{children:"It should not be possible to see the enemy on the first turn, which allows unique placement of units before contact. In the smallest 48 by 48 map, a unit wearing light armour can travel diagonally up to 12 squares and see diagonally 14 squares away. If the opponent is similarly equipped and there are no obstacles in the way (unlikely), then the units can see each other on their second turns (turn 4)."}),Object(c.jsx)("p",{children:"The maps consists of obstacles that are made to look like houses with rooms. Each house can have one or more rooms and may not be square. Rooms are square. Rooms typically have a door on each wall, but not always. The walls may have windows, which are represented as low cover obstacles and units can jump through them. Rooms can have different shape obstacles inside them than what can be found outside the houses. The houses are somewhat evenly placed to provide great opportunities for both sides."}),Object(c.jsx)("h3",{children:"Map representation"}),Object(c.jsx)("p",{children:"A map is represented in a 2D array like this:"}),Object(c.jsx)(r.Suspense,{fallback:Object(c.jsx)("div",{children:"Loading..."}),children:Object(c.jsx)(o,{code:"heightMap = [\n    [0,0,0,0,0,0],\n    [0,0,2,0,0,0],\n    [0,0,0,0,1,0],\n    [0,0,0,0,0,0],\n    [0,0,0,0,0,0],\n    [0,0,0,0,0,0]]\nx, y = 2, 1\nheight = heightMap[y][x]\nprint(height)\n# prints 2"})}),Object(c.jsx)("p",{children:"A high cover marked as 2 is at (2,1) and a low cover marked as 1 is at (4,2) in (x,y) coordinates."}),Object(c.jsx)("p",{children:"Height map is provided at the start of the brawl as part of (very likely) the first message (the setup message):"}),Object(c.jsx)(r.Suspense,{fallback:Object(c.jsx)("div",{children:"Loading..."}),children:Object(c.jsx)(o,{code:"import json\nmessage = json.loads(input())\nprint('map:', message['heightMap'])\n#print('units:', message['units']) # Units\n#print('cost:', message['cost']) # Total cost of the squad\n# prints the heightMap"})}),Object(c.jsx)("p",{children:"Each square on the grid represents 1 unit and 1 unit can fit on one square. 2x2 grid fits 4 units. The height rules are as follows:"}),Object(c.jsx)("table",{children:Object(c.jsxs)("tbody",{children:[Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{children:"Height"}),Object(c.jsx)("td",{children:"0"}),Object(c.jsx)("td",{children:"1"}),Object(c.jsx)("td",{children:"2"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{children:"Obstacle"}),Object(c.jsx)("td",{children:"No"}),Object(c.jsx)("td",{children:"Low"}),Object(c.jsx)("td",{children:"High"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{children:"Walkable"}),Object(c.jsx)("td",{children:"Yes"}),Object(c.jsx)("td",{children:"Yes"}),Object(c.jsx)("td",{children:"No"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{children:"Stoppable"}),Object(c.jsx)("td",{children:"Yes"}),Object(c.jsx)("td",{children:"No"}),Object(c.jsx)("td",{children:"No"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{children:"Shoot"}),Object(c.jsx)("td",{children:"No Block"}),Object(c.jsx)("td",{children:"No Block"}),Object(c.jsx)("td",{children:"Block"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{children:"Visibility"}),Object(c.jsx)("td",{children:"No Block"}),Object(c.jsx)("td",{children:"No Block"}),Object(c.jsx)("td",{children:"Block"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{children:"Peek for shooting"}),Object(c.jsx)("td",{children:"No"}),Object(c.jsx)("td",{children:"Yes"}),Object(c.jsx)("td",{children:"Yes"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{children:"Peek for visibility"}),Object(c.jsx)("td",{children:"No"}),Object(c.jsx)("td",{children:"No"}),Object(c.jsx)("td",{children:"Yes"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{children:"Defence"}),Object(c.jsx)("td",{children:"0%"}),Object(c.jsx)("td",{children:"20%"}),Object(c.jsx)("td",{children:"40%"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{children:"Destructible"}),Object(c.jsx)("td",{children:"No"}),Object(c.jsx)("td",{children:"Yes"}),Object(c.jsx)("td",{children:"Yes"})]})]})}),Object(c.jsx)("p",{children:"Table below provides explanations for each column."}),Object(c.jsx)("table",{children:Object(c.jsxs)("tbody",{children:[Object(c.jsxs)("tr",{children:[Object(c.jsx)("th",{children:"Column"}),Object(c.jsx)("th",{children:"Explanation"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("td",{children:"Height"}),Object(c.jsx)("td",{children:"The integer value on the heightMap"})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("td",{children:"Obstacle"}),Object(c.jsx)("td",{children:"The kind of obstacle."})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("td",{children:"Walkable"}),Object(c.jsx)("td",{children:"Whether the unit can move over this obstacle."})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("td",{children:"Stoppable"}),Object(c.jsx)("td",{children:"Whether the unit can stop on this location at the end of its move."})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("td",{children:"Shoot"}),Object(c.jsx)("td",{children:"Whether this obstacle blocks shots. If it doesn't block then units can shoot over it. If a shot at the unit behind this obstacle is missed the shot can land on the obstacle instead. While the cover does not block any shots the cover can still be targeted directly to destroy it."})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("td",{children:"Visibility"}),Object(c.jsx)("td",{children:"Whether the unit can see over this obstacle, i.e. whether it blocks visibility."})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("td",{children:"Peek for shooting"}),Object(c.jsx)("td",{children:"Whether the unit can peek / side step from behind this obstacle to shoot. The unit can side step to an adjacent square from behind low and high cover to enable better flanking shots."})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("td",{children:"Peek for visibility"}),Object(c.jsx)("td",{children:"Whether the unit can peek / side step from behind this obstacle for visibility. The unit only side steps to an adjacent square from behind high cover as it cannot see over it. It does not peek from behind low or no cover."})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("td",{children:"Defence"}),Object(c.jsxs)("td",{children:["The defence value this obstacle provides when a unit is behind it. See how the defence value affects ",Object(c.jsx)(s.b,{className:"inline",to:"/guide/weapons",children:"hit chance"}),"."]})]}),Object(c.jsxs)("tr",{children:[Object(c.jsx)("td",{children:"Destructible"}),Object(c.jsx)("td",{children:"Whether the obstacle is destroyable. Shots and grenades can destroy cover."})]})]})})]})}},58:function(e,t,n){"use strict";n.d(t,"a",(function(){return y}));var r=n(16),s=n(15),i=n.n(s),c=n(0),o=n.n(c);function a(e){return(a="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function h(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?h(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):h(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}function j(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function u(e){return t=e,(t-=0)===t?e:(e=e.replace(/[\-_\s]+(.)?/g,(function(e,t){return t?t.toUpperCase():""}))).substr(0,1).toLowerCase()+e.substr(1);var t}function f(e){return e.split(";").map((function(e){return e.trim()})).filter((function(e){return e})).reduce((function(e,t){var n,r=t.indexOf(":"),s=u(t.slice(0,r)),i=t.slice(r+1).trim();return s.startsWith("webkit")?e[(n=s,n.charAt(0).toUpperCase()+n.slice(1))]=i:e[s]=i,e}),{})}var p=!1;try{p=!0}catch(g){}function O(e){return r.c.icon?r.c.icon(e):null===e?null:"object"===a(e)&&e.prefix&&e.iconName?e:Array.isArray(e)&&2===e.length?{prefix:e[0],iconName:e[1]}:"string"===typeof e?{prefix:"fas",iconName:e}:void 0}function x(e,t){return Array.isArray(t)&&t.length>0||!Array.isArray(t)&&t?l({},e,t):{}}function y(e){var t=e.forwardedRef,n=b(e,["forwardedRef"]),s=n.icon,i=n.mask,c=n.symbol,o=n.className,a=n.title,h=n.titleId,u=O(s),f=x("classes",[].concat(j(function(e){var t,n=e.spin,r=e.pulse,s=e.fixedWidth,i=e.inverse,c=e.border,o=e.listItem,a=e.flip,h=e.size,d=e.rotation,b=e.pull,j=(l(t={"fa-spin":n,"fa-pulse":r,"fa-fw":s,"fa-inverse":i,"fa-border":c,"fa-li":o,"fa-flip-horizontal":"horizontal"===a||"both"===a,"fa-flip-vertical":"vertical"===a||"both"===a},"fa-".concat(h),"undefined"!==typeof h&&null!==h),l(t,"fa-rotate-".concat(d),"undefined"!==typeof d&&null!==d&&0!==d),l(t,"fa-pull-".concat(b),"undefined"!==typeof b&&null!==b),l(t,"fa-swap-opacity",e.swapOpacity),t);return Object.keys(j).map((function(e){return j[e]?e:null})).filter((function(e){return e}))}(n)),j(o.split(" ")))),g=x("transform","string"===typeof n.transform?r.c.transform(n.transform):n.transform),v=x("mask",O(i)),w=Object(r.a)(u,d({},f,{},g,{},v,{symbol:c,title:a,titleId:h}));if(!w)return function(){var e;!p&&console&&"function"===typeof console.error&&(e=console).error.apply(e,arguments)}("Could not find icon",u),null;var k=w.abstract,N={ref:t};return Object.keys(n).forEach((function(e){y.defaultProps.hasOwnProperty(e)||(N[e]=n[e])})),m(k[0],N)}y.displayName="FontAwesomeIcon",y.propTypes={border:i.a.bool,className:i.a.string,mask:i.a.oneOfType([i.a.object,i.a.array,i.a.string]),fixedWidth:i.a.bool,inverse:i.a.bool,flip:i.a.oneOf(["horizontal","vertical","both"]),icon:i.a.oneOfType([i.a.object,i.a.array,i.a.string]),listItem:i.a.bool,pull:i.a.oneOf(["right","left"]),pulse:i.a.bool,rotation:i.a.oneOf([0,90,180,270]),size:i.a.oneOf(["lg","xs","sm","1x","2x","3x","4x","5x","6x","7x","8x","9x","10x"]),spin:i.a.bool,symbol:i.a.oneOfType([i.a.bool,i.a.string]),title:i.a.string,transform:i.a.oneOfType([i.a.string,i.a.object]),swapOpacity:i.a.bool},y.defaultProps={border:!1,className:"",mask:null,fixedWidth:!1,inverse:!1,flip:null,icon:null,listItem:!1,pull:null,pulse:!1,rotation:null,size:null,spin:!1,symbol:!1,title:"",transform:null,swapOpacity:!1};var m=function e(t,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("string"===typeof n)return n;var s=(n.children||[]).map((function(n){return e(t,n)})),i=Object.keys(n.attributes||{}).reduce((function(e,t){var r=n.attributes[t];switch(t){case"class":e.attrs.className=r,delete n.attributes.class;break;case"style":e.attrs.style=f(r);break;default:0===t.indexOf("aria-")||0===t.indexOf("data-")?e.attrs[t.toLowerCase()]=r:e.attrs[u(t)]=r}return e}),{attrs:{}}),c=r.style,o=void 0===c?{}:c,a=b(r,["style"]);return i.attrs.style=d({},i.attrs.style,{},o),t.apply(void 0,[n.tag,d({},i.attrs,{},a)].concat(j(s)))}.bind(null,o.a.createElement)}}]);