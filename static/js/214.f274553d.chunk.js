(this.webpackJsonppages=this.webpackJsonppages||[]).push([[214],{352:function(t,e,r){"use strict";r.r(e);r(0);var n=r(14),i=r(59),s=r(1);e.default=function(t){var e=t.link,r=t.linkName;return Object(s.jsxs)("div",{className:"info-page",children:[Object(s.jsxs)(n.b,{className:"guide-back-button",to:e,children:[Object(s.jsx)(i.a,{icon:"arrow-left"})," ",r]}),Object(s.jsx)("h2",{children:"Armour"}),Object(s.jsx)("p",{children:"A unit has by default some base stats. The base stats are defined by the unit's type, but currently there is only a single type. Armour is passive and will permanently affect stats. Armour cannot be taken off and will be worn automatically at the start of the brawl."}),Object(s.jsx)("h3",{children:"Base stats"}),Object(s.jsx)("p",{children:"When no armour is worn, then the unit has the following base stats only. Wearing an armour will modify the base stats in some way."}),Object(s.jsx)("table",{children:Object(s.jsxs)("tbody",{children:[Object(s.jsxs)("tr",{children:[Object(s.jsx)("th",{children:"Unit Type"}),Object(s.jsx)("td",{children:"Rookie"}),Object(s.jsx)("td",{children:"The name of unit's type that defines the base stats."})]}),Object(s.jsxs)("tr",{children:[Object(s.jsx)("th",{children:"Exact name"}),Object(s.jsx)("td",{children:"rookie"}),Object(s.jsx)("td",{children:"The exact spelling of the reported unit type."})]}),Object(s.jsxs)("tr",{children:[Object(s.jsx)("th",{children:"Cost"}),Object(s.jsx)("td",{children:"1000"}),Object(s.jsx)("td",{children:"The cost of an additional unit in the unit creation panel."})]}),Object(s.jsxs)("tr",{children:[Object(s.jsx)("th",{children:"Health"}),Object(s.jsx)("td",{children:"3"}),Object(s.jsx)("td",{children:"The amount of hit points the unit can lose before being incapacitated."})]}),Object(s.jsxs)("tr",{children:[Object(s.jsx)("th",{children:"Movement"}),Object(s.jsx)("td",{children:"14"}),Object(s.jsx)("td",{children:"The number of squares the unit can move on a single turn when using both action points. Diagonal movement costs 1.4 points."})]}),Object(s.jsxs)("tr",{children:[Object(s.jsx)("th",{children:"Aim"}),Object(s.jsx)("td",{children:"65"}),Object(s.jsx)("td",{children:"The base aim added to the weapon when shooting."})]}),Object(s.jsxs)("tr",{children:[Object(s.jsx)("th",{children:"Vision"}),Object(s.jsx)("td",{children:"20"}),Object(s.jsx)("td",{children:"The number of squares the unit can see on a straight line. Diagonal cost is 1.4 per square."})]}),Object(s.jsxs)("tr",{children:[Object(s.jsx)("th",{children:"Item slots"}),Object(s.jsx)("td",{children:"1"}),Object(s.jsx)("td",{children:"The number of items the unit can carry by default."})]})]})}),Object(s.jsx)("p",{children:"Adding armour or items will modify the stats accordingly. Currently there is only one type of unit. Intention is to add more unit types in future seasons."}),Object(s.jsx)("h3",{children:"Armours"}),Object(s.jsx)("p",{children:"A unit can wear only a single armour. A unit does not have to wear any armour. Armour permanently increases health and maximum health."}),Object(s.jsx)("table",{children:Object(s.jsxs)("tbody",{children:[Object(s.jsxs)("tr",{children:[Object(s.jsx)("th",{}),Object(s.jsx)("th",{children:"Light Armour"}),Object(s.jsx)("th",{children:"Medium Armour"}),Object(s.jsx)("th",{children:"Heavy Armour"})]}),Object(s.jsxs)("tr",{children:[Object(s.jsx)("th",{children:"Exact name"}),Object(s.jsx)("td",{children:"light"}),Object(s.jsx)("td",{children:"medium"}),Object(s.jsx)("td",{children:"heavy"})]}),Object(s.jsxs)("tr",{children:[Object(s.jsx)("th",{children:"Cost"}),Object(s.jsx)("td",{children:"800"}),Object(s.jsx)("td",{children:"500"}),Object(s.jsx)("td",{children:"900"})]}),Object(s.jsxs)("tr",{children:[Object(s.jsx)("th",{children:"Bonus health"}),Object(s.jsx)("td",{children:"+2"}),Object(s.jsx)("td",{children:"+3"}),Object(s.jsx)("td",{children:"+4"})]}),Object(s.jsxs)("tr",{children:[Object(s.jsx)("th",{children:"Bonus movement"}),Object(s.jsx)("td",{children:"+4"}),Object(s.jsx)("td",{children:"0"}),Object(s.jsx)("td",{children:"-2"})]}),Object(s.jsxs)("tr",{children:[Object(s.jsx)("th",{children:"Bonus item slot"}),Object(s.jsx)("td",{children:"0"}),Object(s.jsx)("td",{children:"0"}),Object(s.jsx)("td",{children:"+1"})]})]})})]})}},59:function(t,e,r){"use strict";r.d(e,"a",(function(){return x}));var n=r(16),i=r(15),s=r.n(i),c=r(0),a=r.n(c);function o(t){return(o="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function l(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function d(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function j(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?d(Object(r),!0).forEach((function(e){l(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):d(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function b(t,e){if(null==t)return{};var r,n,i=function(t,e){if(null==t)return{};var r,n,i={},s=Object.keys(t);for(n=0;n<s.length;n++)r=s[n],e.indexOf(r)>=0||(i[r]=t[r]);return i}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(n=0;n<s.length;n++)r=s[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(i[r]=t[r])}return i}function u(t){return function(t){if(Array.isArray(t)){for(var e=0,r=new Array(t.length);e<t.length;e++)r[e]=t[e];return r}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function h(t){return e=t,(e-=0)===e?t:(t=t.replace(/[\-_\s]+(.)?/g,(function(t,e){return e?e.toUpperCase():""}))).substr(0,1).toLowerCase()+t.substr(1);var e}function f(t){return t.split(";").map((function(t){return t.trim()})).filter((function(t){return t})).reduce((function(t,e){var r,n=e.indexOf(":"),i=h(e.slice(0,n)),s=e.slice(n+1).trim();return i.startsWith("webkit")?t[(r=i,r.charAt(0).toUpperCase()+r.slice(1))]=s:t[i]=s,t}),{})}var p=!1;try{p=!0}catch(g){}function O(t){return n.c.icon?n.c.icon(t):null===t?null:"object"===o(t)&&t.prefix&&t.iconName?t:Array.isArray(t)&&2===t.length?{prefix:t[0],iconName:t[1]}:"string"===typeof t?{prefix:"fas",iconName:t}:void 0}function y(t,e){return Array.isArray(e)&&e.length>0||!Array.isArray(e)&&e?l({},t,e):{}}function x(t){var e=t.forwardedRef,r=b(t,["forwardedRef"]),i=r.icon,s=r.mask,c=r.symbol,a=r.className,o=r.title,d=r.titleId,h=O(i),f=y("classes",[].concat(u(function(t){var e,r=t.spin,n=t.pulse,i=t.fixedWidth,s=t.inverse,c=t.border,a=t.listItem,o=t.flip,d=t.size,j=t.rotation,b=t.pull,u=(l(e={"fa-spin":r,"fa-pulse":n,"fa-fw":i,"fa-inverse":s,"fa-border":c,"fa-li":a,"fa-flip-horizontal":"horizontal"===o||"both"===o,"fa-flip-vertical":"vertical"===o||"both"===o},"fa-".concat(d),"undefined"!==typeof d&&null!==d),l(e,"fa-rotate-".concat(j),"undefined"!==typeof j&&null!==j&&0!==j),l(e,"fa-pull-".concat(b),"undefined"!==typeof b&&null!==b),l(e,"fa-swap-opacity",t.swapOpacity),e);return Object.keys(u).map((function(t){return u[t]?t:null})).filter((function(t){return t}))}(r)),u(a.split(" ")))),g=y("transform","string"===typeof r.transform?n.c.transform(r.transform):r.transform),v=y("mask",O(s)),w=Object(n.a)(h,j({},f,{},g,{},v,{symbol:c,title:o,titleId:d}));if(!w)return function(){var t;!p&&console&&"function"===typeof console.error&&(t=console).error.apply(t,arguments)}("Could not find icon",h),null;var A=w.abstract,k={ref:e};return Object.keys(r).forEach((function(t){x.defaultProps.hasOwnProperty(t)||(k[t]=r[t])})),m(A[0],k)}x.displayName="FontAwesomeIcon",x.propTypes={border:s.a.bool,className:s.a.string,mask:s.a.oneOfType([s.a.object,s.a.array,s.a.string]),fixedWidth:s.a.bool,inverse:s.a.bool,flip:s.a.oneOf(["horizontal","vertical","both"]),icon:s.a.oneOfType([s.a.object,s.a.array,s.a.string]),listItem:s.a.bool,pull:s.a.oneOf(["right","left"]),pulse:s.a.bool,rotation:s.a.oneOf([0,90,180,270]),size:s.a.oneOf(["lg","xs","sm","1x","2x","3x","4x","5x","6x","7x","8x","9x","10x"]),spin:s.a.bool,symbol:s.a.oneOfType([s.a.bool,s.a.string]),title:s.a.string,transform:s.a.oneOfType([s.a.string,s.a.object]),swapOpacity:s.a.bool},x.defaultProps={border:!1,className:"",mask:null,fixedWidth:!1,inverse:!1,flip:null,icon:null,listItem:!1,pull:null,pulse:!1,rotation:null,size:null,spin:!1,symbol:!1,title:"",transform:null,swapOpacity:!1};var m=function t(e,r){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("string"===typeof r)return r;var i=(r.children||[]).map((function(r){return t(e,r)})),s=Object.keys(r.attributes||{}).reduce((function(t,e){var n=r.attributes[e];switch(e){case"class":t.attrs.className=n,delete r.attributes.class;break;case"style":t.attrs.style=f(n);break;default:0===e.indexOf("aria-")||0===e.indexOf("data-")?t.attrs[e.toLowerCase()]=n:t.attrs[h(e)]=n}return t}),{attrs:{}}),c=n.style,a=void 0===c?{}:c,o=b(n,["style"]);return s.attrs.style=j({},s.attrs.style,{},a),e.apply(void 0,[r.tag,j({},s.attrs,{},o)].concat(u(i)))}.bind(null,a.a.createElement)}}]);